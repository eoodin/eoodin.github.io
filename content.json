{"meta":{"title":"知行悟","subtitle":"立志做哥的我","description":null,"author":"建哥","url":"https://eoodin.github.io"},"pages":[],"posts":[{"title":"Why TDD is difficult","slug":"why-tdd-is-difficult","date":"2017-10-27T16:01:00.000Z","updated":"2017-11-27T15:27:55.452Z","comments":true,"path":"2017/10/28/why-tdd-is-difficult/","link":"","permalink":"https://eoodin.github.io/2017/10/28/why-tdd-is-difficult/","excerpt":"","text":"PreparationComparing with the the way that develop a software without unit test, there are couple of extra topics on table when doing test driven development. Testing harnessTesting harness vary from techniques, because of that most of us will no long write test harness for ourselves in order to save effort and to utilize rich features already made by other people, we have to learn a unit test framework for each technique we touched. I faced two problems after I stepped in JavaScript world, the first is what I touched is too much as a bundle including many technologies new to me. I spent considerable time on getting me clearer, however, when writing unit test for a software based on those, I have to understand what can I do with those dependencies. Another problem is that there are two sub types of the technologies, TypeScript for frontend and javascript for backend, they require different setup. For frontend, Angular already shipped with its own testing harness out of the box, but javascript does not. DependenciesIt is usually hard to manage dependencies will in unit tests, especially for those SUT which is not well designed. It took much time to get me comfortable with the way to have interfaces ready before I could write any implementation. I suppose the same issue will be there in any technology that new to me. Mental modelI am not willing to admit the fact that I go to production code without writing any unit test just because the effect of production code give me feedback I wanted for ensuring I am making progress. Even I could realize that is not correct way, I can easily get in the state. I think the feedback I am expecting will be not that necessary to my brain when I am getting familiar with the technology. So I suppose after playing with Angular couple of months there is a timing that I could turn things on track. FearTDD forced us as developer to think carefully before we could write a single line of production code. But I have been working in casual way for long time, even I understand that the total effort of production code first approach will be higher that TDD approach, It turns into habitual old approach easily. I think the cause for this pattern should be fear, I was afraid of being working on writing tests even design the SUT for long time. I experienced couple of cases while writing unit tests, I found the design needs to be redone after some of unit tests and their production code ready, this was far from refactoring. On contrast, directly writing production code gave me the feeling that I will waste less when I fall into this kind of situation. ConclusionI still believe that TDD is a better approach of software development than direct coding, or later unit tests approach, but TDD is feasible only following criteria met: The SUT is well designed, or could be well designed Developer needs to be familiar with the technology been used Test harness needs to be handy for developers.","categories":[{"name":"web","slug":"web","permalink":"https://eoodin.github.io/categories/web/"}],"tags":[]},{"title":"Angular测试","slug":"angular-testing","date":"2017-10-27T14:40:00.000Z","updated":"2017-11-27T15:26:22.587Z","comments":true,"path":"2017/10/27/angular-testing/","link":"","permalink":"https://eoodin.github.io/2017/10/27/angular-testing/","excerpt":"","text":"Angular测试四大件今年以来Angular变化很多，比较大的一个变化就是文档的质量相比去年有了很大的提高，因此如果是需要系统地学习Angular测试，看官网的帮助是一个最好的选择，它还在不断地更新。这里主要是为了记录一下在为Shelf添加测试的过程和遇到的问题，以备参考。 这里说的是测试，官方文档就是说的测试，包含了单元测试和端到端测试，其中单元测试需要用到的东西有： Karma 这是JavaScript项目常用的单元测试的运行器 Jasmine 这是JavaScript项目广泛采用的单元测试框架，它是一个BDD的框架 Angular测试工具集 这是真正Angular提供用于帮助测试的东西 准备Angular 今年在 @angular/cli 上投入很多，现在官网很多教程都已经采用cli来说明，Shelf也在很早以前就使用cli来管理代码，淌过不少坑。基于CLI的测试准备也相当简单，如果是ng new出来的项目，自动就设置好了，只需要在app/src下写*.spec.ts就可以跑了。 测试类型Angular 把测试分为两类，一类是跟Angular机制无关的，比如Service, Pipe，这类被测对象应该是简单的TypeScript的对象，我们只需按照一般的测试写就行了不需要用到上面列出的Angular测试工具集。另一类就比较麻烦了，比如Directive, Component这类，因为它们的测试点往往依赖Angular的Change Detection，HTML渲染等。 Angular测试工具集测试工具集提供这些功能 TestBed 用于创建一个用于测试的NgModule环境 ComponentFixture 使用TestBed创建出来的被测对象的封装 .componentInstance即被测对象， .debugElement提供一个操作被测对象的接口，比如检查元素状态 .debugElement.injector.get(UserService)获取injector .detectChanges可以手动检测变动，如果不调用变动不会有效果 .compileCompoennts 配合async可以正常处理外部template和style的component ComponentFixtureAutoDetect 配置TestBed时将之放入provider里，除直接修改component field不生效外，可以实现自动Change Detection（因为它hook timer等async调用） async 把传beforeEach setup包上async，框架会把它测试放入一个zone，异步执行后续的boforeEach和测试 Angular模块测试处理依赖 TestBed.configureTestingModule({ declarations: [ WelcomeComponent ], // providers: [ UserService ] // NO! Don't provide the real service! // Provide a test-double instead providers: [ {provide: UserService, useValue: userServiceStub } ] }); 访问依赖被注入的依赖是一个clone，访问useValue的直接引用没有效果 TBC..","categories":[{"name":"web","slug":"web","permalink":"https://eoodin.github.io/categories/web/"}],"tags":[]},{"title":"致我们的汉字","slug":"to-han-char","date":"2017-10-23T13:57:00.000Z","updated":"2017-11-27T15:27:26.043Z","comments":true,"path":"2017/10/23/to-han-char/","link":"","permalink":"https://eoodin.github.io/2017/10/23/to-han-char/","excerpt":"","text":"简体字首先我是反对简体字的。现行的简体字（一简）是个半成品，而且是很多地方缺少系统设计的半成品，而三简被叫停，二简也废除了说明制定文字规范的顶层集体也不笃信汉字简化是个好的方向。我所了解的简化字的几个优点： 易写 这恐怕是很多人支持简体字最大的原因，简体字很多地方确实把笔画简省很多，比如前阵子湾湾们拿出来对比的“忧郁的台湾乌龟”。。。","categories":[{"name":"calligraphy","slug":"calligraphy","permalink":"https://eoodin.github.io/categories/calligraphy/"}],"tags":[]},{"title":"一年小结","slug":"calligraph-summary","date":"2017-10-11T15:20:00.000Z","updated":"2017-11-27T15:26:51.971Z","comments":true,"path":"2017/10/11/calligraph-summary/","link":"","permalink":"https://eoodin.github.io/2017/10/11/calligraph-summary/","excerpt":"","text":"时间 从2016年9月开始练字以来时间已经过了一年，是的，只是时间过了一年，而我练字并没有持续一年。除掉一些节假日偶有荒废外，从2月底到5月底，三个月的时间全家生活在工地里—我在做家俱，这期间没办法练字。在其余时日里，大概每一两日会写上一次，每次长短不定，长的有四五个小时，短的二十分钟。影响时间长短的主要因素是情绪，或是没心情或是较上劲了都不宜强练。其次是体力，写久了手酸体乏效果渐差只能作罢。总结一下，按平均两天一次，每次半小时计，大约70小时，真的是很少。 字体 开始的两个月都是看着田蕴章老师的《每日一题-每日一字》的节目写，自然字体也是“田体”。该节目共365集，每晚得看好几集，感觉是消化不了，但被急迫的心情驱使，几乎是走马观花地看过来的，“田体”的临习也基本到此结束了。 这是2106年10月写的单字 这是12月尝试的通临 田体主要源自欧体，而欧体是四大楷书中法度、结构最严谨的字体，自己希望打个好的基础，于是打算从欧体开始。田老师也多次提到他的字体并非欧阳询所书原貌，而临习对象更应是欧阳询所出，于是开始临《九成宫》。《九成宫》凡六百余字，除少数残缺不可临外，数量对初学来说还是算大的，其实也就在几天前我才完整的临完它。 九成宫 除了临《九成宫》外，今年8月开始偶尔临写下智勇草书千字文，除了尝“旧”外，实为常被草字难住而无法读懂书法作品的文意。之后的时间里偶尔会临一些欧阳询的行书，就是那本《千字文》，网上多有人怀疑此帖并非欧阳询手出，经过一年多对其《九成宫》临习，也感觉这本行书少有《九成宫》的稳重，倒是更加险峻。不过反正我是爱好而并非一定得习得正宗，也就照临习数页。 近一个月加入了《集王羲之圣教序》，刚开了个头，虽然是集字，虽然失真，但是那字形、笔法、疏密、体态让我越临越觉震撼。难怪被尊为书圣！总体来说，经过一本《九成宫》大半年的临习，现在慢慢开始学习行草书，行书走王羲之，草书走智勇，也参考孙过庭、怀素。 再说说我“看看就算了”的字体。 颜体，不知道为何，就是不喜欢，不喜欢那肥肥的感觉。但是欧、赵、柳这三体在写大号字，比如牌匾时，明显单薄了些，不如颜体好看。所以今后要有机会练习榜书时再去参考吧。 赵体，赵孟頫的楷书在我看来既继承了晋唐楷书的法度，又有自己舒适畅快的字形，也更接近于现代人的审美，等以后有精力了再学习吧。 隶书、魏碑， 这个书体基本没有实用价值了仅存在于书法作品中，我一个书法爱好者真难于将之排上学习日程。 金文、大篆， 这两体没什么“书”法可讲、都是画线，至于现在有很多篆书书法作品，我觉得已经脱离古意甚远，我不想临习，偶尔看看就好。 小篆，这个和金文、大篆类似，但他是第一个统一的文字系统，而且是其后书体的祖宗，很有学习的必要，是学习，而非临习，能认能写出来就是我最高追求了。 学习用具 前前后后买了很多东西，主要是笔和帖，另外笔架、砚、墨不一而足，这里主要说说帖、笔和纸吧。 帖的选择基本按着少、靠谱的原则买的，至于类型，没有遵照田老师的指导买原大的字帖，原因是：太难找了。我约摸觉得就没有出版社出原大的《九成宫》，因为原石上的字大概2~3厘米，这么大的字在字帖上看起来实在是小。但是呢，只要我们写的时候知道它原大是多少，背临阶段写几个原大的感受一下就好。 加起来估计买了20多 支笔，现在笔架上还剩下9支，其它的都扔掉了。最便的6块，最贵的60，再贵的实在下不了手。除开质量、性价比的因素，笔和人，笔和字是有缘分的。比如同一支笔，我觉得好写，另一个人也许并不觉得好写，这跟个人用笔方法、习惯有关，另外不同的笔也会更适合写不同的字体。经过这么多笔的实践，我发现对我来说细光锋纯羊毫是最适合写欧体的，出锋4cm左右写6cm的字非常趁手。行草书的话我觉得兼毫或者狼毫更好，因为笔的弹性这时就更重要了。这20多支笔里，留下最多的来自三个笔庄：云逸斋、汉正、元锋堂，还有一支大明笔庄的。其中汉正最便宜，性价比最高，云逸斋价高质优、大明笔庄居其间。 最开始买一刀带格毛边纸和4刀4开宣纸起步练习，之后主要使用宣纸，兼以毛边纸。宣纸是从半生成生，不用熟宣，个人感觉熟宣没有洇墨的效果，笔在纸上的速度完全不影响字的外形， 这对于练习笔法的节奏和流畅性有很大影响。 水写布。。。嗯买了好几张终于得出结论：歪道，不易取。 笔法 古代书论很多，也很玄，少有名家有清楚的叙述。这其中可能的原因有很多，其中比较有理的是密技说、圈子说和更替说。 晋唐是书法的高峰，从钟繇到卫夫人、王羲之甚至之后的怀素，智勇，这些人都能理出一个师从或血缘关系，不得不让人怀疑书法的“法”是他们只授至亲或爱徙，而旁人纵临池终身也难有他们的成就。 唐太宗办的书法班前后三届，有虞世南、欧阳询、禇遂良这样的书法大家担当班主任，学生六七十人全是从官宦家精挑具有潜质的少年才俊。这样一个皇帝主导，大牛担纲的书法班竟没能出一个书法大家。 我们有的是什么呢，《笔阵图》、《永字八法》、《三十六法》、《书谱》。。。这些有些只是基本的写自规则、有些晦涩难懂。不过作为初学，先把基本的东西学到才是紧要的。 由于我主要写欧体，欧体笔法比较单一，没有太多变化，永字八法基本够用。以后学习深入了再研究其它笔法。 现在书法怎么了看《每日一题每日一字》时，常听田老师讲现在的书坦风气不好，没有经历过，也不敢轻信，但确实看到过”丑书“、”今楷“之类的东西在网上。 现在书法有个严重的问题是我们每一个人很难有古人那么多的时间去练习，书法这个东西大半是练出来的，古人从入塾到入仕几乎每天都要练习，现代人，哪怕是书法家，还要应付各种应酬、大大小小的锁事，很难有古人那么多的时间。我们也没有那种氛围。 另外书法的字外工也难与古人相比，我们大多数人四书五经都没学完，更别提完整的经史子集、诗词韵律。现在我看到朋友圈有人晒打油诗，不管写的如何，我都要点赞。恐怕今后鲜有人会写一首符合平仄、韵律、对仗要求的律诗了。。 关于学养学养其实正是上面说到的”字外工”。田老师讲过一个中国书协主席的故事比如有意思，他受邀写一幅字，内容是“有凤来仪”，结果写成了“有风来仪”，被指出后还辨称，有风凤才能飞来云云。这不仅反映了他学识不够，更反映了其修养的欠缺。 在写字之余，我想我应该读更多的书，不想有一天心血来潮想写几个字时，只能写“我很高兴”这种无赖。 关于时间时间是现在最缺的东西 ，技术上还有很多东西需要学习，儿子也需要管教，还有很多其它爱好，自己的小项目也缺人力。 我觉得下一阶段需要把自己有的时间重新规划一下，应该放弃一些东西，而让进行的东西有一些结果。","categories":[{"name":"calligraphy","slug":"calligraphy","permalink":"https://eoodin.github.io/categories/calligraphy/"}],"tags":[]}]}